From 1dcc60f215b49b45975b36239a207e7fd43d70e7 Mon Sep 17 00:00:00 2001
From: Christophe Parant <c.parant@phytec.fr>
Date: Thu, 23 Sep 2021 17:08:45 +0200
Subject: [PATCH 2/6] ARM 5.10.10 stm32mp1 phy1 DEVICETREE

---
 .../boot/dts/phyboard-stm32mp1-pinctrl.dtsi   | 508 ++++++++++++++++++
 arch/arm/boot/dts/phyboard-stm32mp1.dtsi      | 343 ++++++++++++
 .../dts/phycore-stm32mp1-2-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-2-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-2.dts      |  48 ++
 .../dts/phycore-stm32mp1-3-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-3-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-3.dts      |  52 ++
 .../dts/phycore-stm32mp1-4-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-4-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-4.dts      |  52 ++
 .../dts/phycore-stm32mp1-5-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-5-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-5.dts      |  43 ++
 .../dts/phycore-stm32mp1-6-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-6-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-6.dts      |  44 ++
 .../dts/phycore-stm32mp1-7-a7-examples.dts    |  25 +
 .../dts/phycore-stm32mp1-7-m4-examples.dts    | 176 ++++++
 arch/arm/boot/dts/phycore-stm32mp1-7.dts      |  44 ++
 .../boot/dts/phycore-stm32mp15-pinctrl.dtsi   | 277 ++++++++++
 arch/arm/boot/dts/phycore-stm32mp15-som.dtsi  | 429 +++++++++++++++
 22 files changed, 3046 insertions(+)
 create mode 100644 arch/arm/boot/dts/phyboard-stm32mp1-pinctrl.dtsi
 create mode 100644 arch/arm/boot/dts/phyboard-stm32mp1.dtsi
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-2-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-2-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-2.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-3-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-3-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-3.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-4-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-4-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-4.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-5-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-5-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-5.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-6-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-6-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-6.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-7-a7-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-7-m4-examples.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp1-7.dts
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp15-pinctrl.dtsi
 create mode 100644 arch/arm/boot/dts/phycore-stm32mp15-som.dtsi

diff --git a/arch/arm/boot/dts/phyboard-stm32mp1-pinctrl.dtsi b/arch/arm/boot/dts/phyboard-stm32mp1-pinctrl.dtsi
new file mode 100644
index 000000000000..96a3b1230493
--- /dev/null
+++ b/arch/arm/boot/dts/phyboard-stm32mp1-pinctrl.dtsi
@@ -0,0 +1,508 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+#include <dt-bindings/pinctrl/stm32-pinfunc.h>
+
+&pinctrl {
+
+			dac_ch1_pins_a: dac-ch1 {
+				pins {
+					pinmux = <STM32_PINMUX('A', 4, ANALOG)>;
+				};
+			};
+
+			dac_ch2_pins_a: dac-ch2 {
+				pins {
+					pinmux = <STM32_PINMUX('A', 5, ANALOG)>;
+				};
+			};
+
+			dcmi_pins_a: dcmi-0 {
+				pins {
+					pinmux = <STM32_PINMUX('H', 8,  AF13)>,/* DCMI_HSYNC */
+						 <STM32_PINMUX('B', 7,  AF13)>,/* DCMI_VSYNC */
+						 <STM32_PINMUX('A', 6,  AF13)>,/* DCMI_PIXCLK */
+						 <STM32_PINMUX('H', 9,  AF13)>,/* DCMI_D0 */
+						 <STM32_PINMUX('C', 7,  AF13)>,/* DCMI_D1 */
+						 <STM32_PINMUX('E', 0,  AF13)>,/* DCMI_D2 */
+						 <STM32_PINMUX('E', 1,  AF13)>,/* DCMI_D3 */
+						 <STM32_PINMUX('H', 14, AF13)>,/* DCMI_D4 */
+						 <STM32_PINMUX('I', 4,  AF13)>,/* DCMI_D5 */
+						 <STM32_PINMUX('E', 5,  AF13)>,/* DCMI_D6 */
+						 <STM32_PINMUX('I', 7,  AF13)>,/* DCMI_D7 */
+						 <STM32_PINMUX('I', 1,  AF13)>,/* DCMI_D8 */
+						 <STM32_PINMUX('H', 7,  AF13)>;/* DCMI_D9 */
+					bias-disable;
+				};
+			};
+
+			dcmi_sleep_pins_a: dcmi-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('H', 8,  ANALOG)>,/* DCMI_HSYNC */
+						 <STM32_PINMUX('B', 7,  ANALOG)>,/* DCMI_VSYNC */
+						 <STM32_PINMUX('A', 6,  ANALOG)>,/* DCMI_PIXCLK */
+						 <STM32_PINMUX('H', 9,  ANALOG)>,/* DCMI_D0 */
+						 <STM32_PINMUX('C', 7,  ANALOG)>,/* DCMI_D1 */
+						 <STM32_PINMUX('E', 0,  ANALOG)>,/* DCMI_D2 */
+						 <STM32_PINMUX('E', 1,  ANALOG)>,/* DCMI_D3 */
+						 <STM32_PINMUX('H', 14, ANALOG)>,/* DCMI_D4 */
+						 <STM32_PINMUX('I', 4,  ANALOG)>,/* DCMI_D5 */
+						 <STM32_PINMUX('E', 5,  ANALOG)>,/* DCMI_D6 */
+						 <STM32_PINMUX('I', 7,  ANALOG)>,/* DCMI_D7 */
+						 <STM32_PINMUX('I', 1,  ANALOG)>,/* DCMI_D8 */
+						 <STM32_PINMUX('H', 7,  ANALOG)>;/* DCMI_D9 */
+				};
+			};
+
+
+			i2c1_pins_a: i2c1-0 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 14, AF5)>, /* I2C1_SCL */
+						 <STM32_PINMUX('F', 15, AF5)>; /* I2C1_SDA */
+					bias-disable;
+					drive-open-drain;
+					slew-rate = <0>;
+				};
+			};
+
+			i2c1_pins_sleep_a: i2c1-1 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 14, ANALOG)>, /* I2C1_SCL */
+						 <STM32_PINMUX('F', 15, ANALOG)>; /* I2C1_SDA */
+				};
+			};
+
+
+			ltdc_pins_a: ltdc-a-0 {
+				pins {
+					pinmux = <STM32_PINMUX('G', 7,  AF14)>, /* LCD_CLK */
+						 <STM32_PINMUX('I', 10, AF14)>, /* LCD_HSYNC */
+						 <STM32_PINMUX('I', 9,  AF14)>, /* LCD_VSYNC */
+						 <STM32_PINMUX('E', 13, AF14)>, /* LCD_DE */
+						 <STM32_PINMUX('C', 10, AF14)>, /* LCD_R2 */
+						 <STM32_PINMUX('B', 0,   AF9)>, /* LCD_R3 */
+						 <STM32_PINMUX('H', 10, AF14)>, /* LCD_R4 */
+						 <STM32_PINMUX('H', 11, AF14)>, /* LCD_R5 */
+						 <STM32_PINMUX('H', 12, AF14)>, /* LCD_R6 */
+						 <STM32_PINMUX('E', 15, AF14)>, /* LCD_R7 */
+						 <STM32_PINMUX('H', 13, AF14)>, /* LCD_G2 */
+						 <STM32_PINMUX('E', 11, AF14)>, /* LCD_G3 */
+						 <STM32_PINMUX('H', 15, AF14)>, /* LCD_G4 */
+						 <STM32_PINMUX('H', 4,   AF9)>, /* LCD_G5 */
+						 <STM32_PINMUX('I', 11,  AF9)>, /* LCD_G6 */
+						 <STM32_PINMUX('I', 2,  AF14)>, /* LCD_G7 */
+						 <STM32_PINMUX('G', 10, AF14)>, /* LCD_B2 */
+						 <STM32_PINMUX('G', 11, AF14)>, /* LCD_B3 */
+						 <STM32_PINMUX('E', 12, AF14)>, /* LCD_B4 */
+						 <STM32_PINMUX('I', 5,  AF14)>, /* LCD_B5 */
+						 <STM32_PINMUX('B', 8,  AF14)>, /* LCD_B6 */
+						 <STM32_PINMUX('D', 8,  AF14)>; /* LCD_B7 */
+					bias-disable;
+					drive-push-pull;
+					slew-rate = <1>;
+				};
+			};
+
+			ltdc_pins_sleep_a: ltdc-a-1 {
+				pins {
+                                        pinmux = <STM32_PINMUX('G', 7,  ANALOG)>, /* LCD_CLK */
+                                                 <STM32_PINMUX('I', 10, ANALOG)>, /* LCD_HSYNC */
+                                                 <STM32_PINMUX('I', 9,  ANALOG)>, /* LCD_VSYNC */
+                                                 <STM32_PINMUX('E', 13, ANALOG)>, /* LCD_DE */
+                                                 <STM32_PINMUX('C', 10, ANALOG)>, /* LCD_R2 */
+                                                 <STM32_PINMUX('B', 0,  ANALOG)>, /* LCD_R3 */
+                                                 <STM32_PINMUX('H', 10, ANALOG)>, /* LCD_R4 */
+                                                 <STM32_PINMUX('H', 11, ANALOG)>, /* LCD_R5 */
+                                                 <STM32_PINMUX('H', 12, ANALOG)>, /* LCD_R6 */
+                                                 <STM32_PINMUX('E', 15, ANALOG)>, /* LCD_R7 */
+                                                 <STM32_PINMUX('H', 13, ANALOG)>, /* LCD_G2 */
+                                                 <STM32_PINMUX('E', 11, ANALOG)>, /* LCD_G3 */
+                                                 <STM32_PINMUX('H', 15, ANALOG)>, /* LCD_G4 */
+                                                 <STM32_PINMUX('H', 4,  ANALOG)>, /* LCD_G5 */
+                                                 <STM32_PINMUX('I', 11, ANALOG)>, /* LCD_G6 */
+                                                 <STM32_PINMUX('I', 2,  ANALOG)>, /* LCD_G7 */
+                                                 <STM32_PINMUX('G', 10, ANALOG)>, /* LCD_B2 */
+                                                 <STM32_PINMUX('G', 11, ANALOG)>, /* LCD_B3 */
+                                                 <STM32_PINMUX('E', 12, ANALOG)>, /* LCD_B4 */
+                                                 <STM32_PINMUX('I', 5,  ANALOG)>, /* LCD_B5 */
+                                                 <STM32_PINMUX('B', 8,  ANALOG)>, /* LCD_B6 */
+                                                 <STM32_PINMUX('D', 8,  ANALOG)>; /* LCD_B7 */
+                                };
+			};
+
+
+			m_can2_pins_a: m-can1-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('B', 13, AF9)>; /* CAN2_TX */
+					slew-rate = <0>;
+					drive-push-pull;
+					bias-disable;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('B', 5, AF9)>; /* CAN2_RX */
+                                                bias-disable;
+				};
+			};
+
+			m_can2_sleep_pins_a: m_can2-sleep@0 {
+				pins {
+					pinmux = <STM32_PINMUX('B', 13, ANALOG)>, /* CAN2_TX */
+						 <STM32_PINMUX('B', 5, ANALOG)>; /* CAN2_RX */
+				};
+			};
+
+
+			pwm5_pins_a: pwm5-0 {
+				pins {
+					pinmux = <STM32_PINMUX('I', 0, AF2)>; /* TIM5_CH4 */
+					bias-pull-down;
+					drive-push-pull;
+					slew-rate = <0>;
+				};
+			};
+
+			pwm5_sleep_pins_a: pwm5-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('I', 0, ANALOG)>; /* TIM5_CH4 */
+				};
+			};
+
+
+                        sai2a_pins_b: sai2a-2 {
+                                pins {
+                                        pinmux = <STM32_PINMUX('I', 6, AF10)>; /* SAI2_SD_A */
+                                        bias-disable;
+                                };
+                        };
+
+                        sai2a_sleep_pins_b: sai2a-3 {
+                                pins {
+                                        pinmux = <STM32_PINMUX('I', 6, ANALOG)>; /* SAI2_SD_A */
+                                };
+                        };
+
+			sai2b_pins_a: sai2b-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('H', 2, AF10)>, /* SAI2_SCK_B */
+						 <STM32_PINMUX('C', 0, AF8)>, /* SAI2_FS_B */
+						 <STM32_PINMUX('H', 3, AF10)>; /* SAI2_MCLK_B */
+					slew-rate = <0>;
+					drive-push-pull;
+					bias-disable;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('F', 11, AF10)>; /* SAI2_SD_B */
+					bias-disable;
+				};
+			};
+
+			sai2b_sleep_pins_a: sai2b-1 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 11, ANALOG)>, /* SAI2_SD_B */
+						 <STM32_PINMUX('H', 2, ANALOG)>, /* SAI2_SCK_B */
+						 <STM32_PINMUX('C', 0, ANALOG)>, /* SAI2_FS_B */
+						 <STM32_PINMUX('H', 3, ANALOG)>; /* SAI2_MCLK_B */
+				};
+			};
+
+			sai2b_pins_b: sai2b-2 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 11, AF10)>; /* SAI2_SD_B */
+					bias-disable;
+				};
+			};
+
+			sai2b_sleep_pins_b: sai2b-3 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 11, ANALOG)>; /* SAI2_SD_B */
+				};
+			};
+
+
+			sdmmc1_b4_pins_a: sdmmc1-b4-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+						 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+						 <STM32_PINMUX('E', 6, AF8)>, /* SDMMC1_D2 */
+						 <STM32_PINMUX('C', 11, AF12)>, /* SDMMC1_D3 */
+						 <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+					slew-rate = <1>;
+					drive-push-pull;
+					bias-disable;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
+					slew-rate = <2>;
+					drive-push-pull;
+					bias-disable;
+				};
+			};
+
+			sdmmc1_b4_od_pins_a: sdmmc1-b4-od-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
+						 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
+						 <STM32_PINMUX('E', 6, AF8)>, /* SDMMC1_D2 */
+						 <STM32_PINMUX('C', 11, AF12)>; /* SDMMC1_D3 */
+					slew-rate = <1>;
+					drive-push-pull;
+					bias-disable;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
+					slew-rate = <2>;
+					drive-push-pull;
+					bias-disable;
+				};
+				pins3 {
+					pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
+					slew-rate = <1>;
+					drive-open-drain;
+					bias-disable;
+				};
+			};
+
+			sdmmc1_b4_sleep_pins_a: sdmmc1-b4-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
+						 <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
+						 <STM32_PINMUX('E', 6, ANALOG)>, /* SDMMC1_D2 */
+						 <STM32_PINMUX('C', 11, ANALOG)>, /* SDMMC1_D3 */
+						 <STM32_PINMUX('C', 12, ANALOG)>, /* SDMMC1_CK */
+						 <STM32_PINMUX('D', 2, ANALOG)>; /* SDMMC1_CMD */
+				};
+			};
+
+			sdmmc3_b4_pins_a: sdmmc3-b4-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
+						 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
+						 <STM32_PINMUX('F', 5, AF9)>, /* SDMMC3_D2 */
+						 <STM32_PINMUX('D', 7, AF10)>, /* SDMMC3_D3 */
+						 <STM32_PINMUX('F', 1, AF9)>; /* SDMMC3_CMD */
+					slew-rate = <1>;
+					drive-push-pull;
+					bias-pull-up;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+					slew-rate = <2>;
+					drive-push-pull;
+					bias-pull-up;
+				};
+			};
+
+			sdmmc3_b4_od_pins_a: sdmmc3-b4-od-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('F', 0, AF9)>, /* SDMMC3_D0 */
+						 <STM32_PINMUX('F', 4, AF9)>, /* SDMMC3_D1 */
+						 <STM32_PINMUX('F', 5, AF9)>, /* SDMMC3_D2 */
+						 <STM32_PINMUX('D', 7, AF10)>; /* SDMMC3_D3 */
+					slew-rate = <1>;
+					drive-push-pull;
+					bias-pull-up;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('G', 15, AF10)>; /* SDMMC3_CK */
+					slew-rate = <2>;
+					drive-push-pull;
+					bias-pull-up;
+				};
+				pins3 {
+					pinmux = <STM32_PINMUX('F', 1, AF9)>; /* SDMMC2_CMD */
+					slew-rate = <1>;
+					drive-open-drain;
+					bias-pull-up;
+				};
+			};
+
+			sdmmc3_b4_sleep_pins_a: sdmmc3-b4-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('F', 0, ANALOG)>, /* SDMMC3_D0 */
+						 <STM32_PINMUX('F', 4, ANALOG)>, /* SDMMC3_D1 */
+						 <STM32_PINMUX('F', 5, ANALOG)>, /* SDMMC3_D2 */
+						 <STM32_PINMUX('D', 7, ANALOG)>, /* SDMMC3_D3 */
+						 <STM32_PINMUX('G', 15, ANALOG)>, /* SDMMC3_CK */
+						 <STM32_PINMUX('F', 1, ANALOG)>; /* SDMMC3_CMD */
+				};
+			};
+
+
+			uart4_pins_a: uart4-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('B', 9, AF8)>; /* UART4_TX */
+					bias-disable;
+					drive-push-pull;
+					slew-rate = <0>;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+					bias-disable;
+				};
+			};
+
+			uart4_idle_pins_a: uart4-idle-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('B', 9, ANALOG)>; /* UART4_TX */
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+					bias-disable;
+				};
+			};
+
+			uart4_sleep_pins_a: uart4-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('B', 9, ANALOG)>, /* UART4_TX */
+						 <STM32_PINMUX('B', 2, ANALOG)>; /* UART4_RX */
+				};
+			};
+
+			usart1_pins_b: usart1-1 {
+				pins1 {
+				       pinmux = <STM32_PINMUX('A', 12, AF7)>; /* USART1_RTS */
+				       bias-disable;
+				       drive-push-pull;
+				       slew-rate = <0>;
+				};
+				pins2 {
+				       pinmux = <STM32_PINMUX('A', 11, AF7)>; /* USART1_CTS_NSS */
+				       bias-disable;
+				};
+			};
+
+			usart1_idle_pins_b: usart1-idle-1 {
+				pins1 {
+				       pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
+						<STM32_PINMUX('A', 11, AF7)>; /* USART1_CTS_NSS */
+				};
+			};
+
+			usart1_sleep_pins_b: usart1-sleep-1 {
+				pins {
+				       pinmux = <STM32_PINMUX('A', 12, ANALOG)>, /* USART1_RTS */
+						<STM32_PINMUX('A', 11, ANALOG)>; /* USART1_CTS_NSS */
+				};
+			};
+
+			usart3_pins_a: usart3-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
+					bias-disable;
+					drive-push-pull;
+					slew-rate = <0>;
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+					bias-disable;
+				};
+			};
+
+			usart3_idle_pins_a: usart3-idle-0 {
+				pins1 {
+					pinmux = <STM32_PINMUX('B', 10, ANALOG)>; /* USART3_TX */
+				};
+				pins2 {
+					pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
+					bias-disable;
+				};
+			};
+
+			usart3_sleep_pins_a: usart3-sleep-0 {
+				pins {
+					pinmux = <STM32_PINMUX('B', 10, ANALOG)>, /* USART3_TX */
+						 <STM32_PINMUX('B', 12, ANALOG)>; /* USART3_RX */
+				};
+			};
+
+			usart3_pins_b: usart3-1 {
+				pins1 {
+				       pinmux = <STM32_PINMUX('G', 8, AF8)>; /* USART3_RTS */
+				       bias-disable;
+				       drive-push-pull;
+				       slew-rate = <0>;
+				};
+				pins2 {
+				       pinmux = <STM32_PINMUX('B', 13, AF7)>; /* USART3_CTS_NSS */
+				       bias-disable;
+				};
+			};
+
+			usart3_idle_pins_b: usart3-idle-1 {
+				pins1 {
+				       pinmux = <STM32_PINMUX('G', 8, ANALOG)>, /* USART3_RTS */
+						<STM32_PINMUX('B', 13, AF7)>; /* USART3_CTS_NSS */
+				};
+			};
+
+			usart3_sleep_pins_b: usart3-sleep-1 {
+				pins {
+				       pinmux = <STM32_PINMUX('G', 8, ANALOG)>, /* USART3_RTS */
+						<STM32_PINMUX('B', 13, ANALOG)>; /* USART3_CTS_NSS */
+				};
+			};
+
+			usbotg_hs_pins_a: usbotg_hs-0 {
+				pins {
+					pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* OTG_ID */
+				};
+			};
+};
+
+&pinctrl_z {
+
+	usart1_pins_a: usart1-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('Z', 7, AF7)>; /* USART1_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
+			bias-disable;
+		};
+	};
+
+	usart1_idle_pins_a: usart1-idle-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>; /* USART1_TX */
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('Z', 6, AF7)>; /* USART1_RX */
+			bias-disable;
+		};
+	};
+
+	usart1_sleep_pins_a: usart1-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 7, ANALOG)>, /* USART1_TX */
+				 <STM32_PINMUX('Z', 6, ANALOG)>; /* USART1_RX */
+		};
+	};
+
+        spi1_pins_a: spi1-0 {
+                pins1 {
+                        pinmux = <STM32_PINMUX('Z', 0, AF5)>, /* SPI1_SCK */
+                                <STM32_PINMUX('Z', 2, AF5)>; /* SPI1_MOSI */
+                        bias-disable;
+                        drive-push-pull;
+                        slew-rate = <1>;
+                };
+                pins2 {
+                        pinmux = <STM32_PINMUX('Z', 1, AF5)>; /* SPI1_MISO */
+                        bias-disable;
+                };
+        };
+
+        spi1_sleep_pins_a: spi1-sleep-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, ANALOG)>, /* SPI1_SCK */
+                                 <STM32_PINMUX('Z', 1, ANALOG)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, ANALOG)>; /* SPI1_MOSI */
+                };
+        };
+};
diff --git a/arch/arm/boot/dts/phyboard-stm32mp1.dtsi b/arch/arm/boot/dts/phyboard-stm32mp1.dtsi
new file mode 100644
index 000000000000..08844682074b
--- /dev/null
+++ b/arch/arm/boot/dts/phyboard-stm32mp1.dtsi
@@ -0,0 +1,343 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+#include "phyboard-stm32mp1-pinctrl.dtsi"
+#include <dt-bindings/leds/leds-pca9532.h>
+
+/ {
+	aliases {
+		ethernet0 = &ethernet0;
+		rtc0	= &i2c4_rtc;
+		rtc1	= &rtc;
+		serial0 = &uart4;
+                serial1 = &usart3;
+                serial2 = &usart1;
+        };
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	clocks {
+		clk_ext_camera: clk-ext-camera {
+			#clock-cells = <0>;
+			compatible = "fixed-clock";
+			clock-frequency = <27000000>;
+			status = "disabled";
+		};
+	};
+
+        sound {
+                compatible = "audio-graph-card";
+                label = "STM32MP1-PHYCORE";
+                routing =
+			"Playback", "MCLK", /* Set a route between "MCLK" and "playback" widgets */
+			"Capture", "MCLK";
+                dais = <&sai2b_port &sai2a_port>;
+                status = "okay";
+        };
+
+	gpio_keys: gpio-keys {
+		compatible = "gpio-keys";
+		status = "okay";
+
+		home {
+			label = "Home";
+			gpios = <&gpioa 13 GPIO_ACTIVE_LOW>;
+			linux,code = <KEY_HOME>;
+		};
+
+		enter {
+			label = "Enter";
+			gpios = <&gpioa 14 GPIO_ACTIVE_LOW>;
+			linux,code = <KEY_ENTER>;
+		};
+	};
+
+	usb_phy_tuning: usb-phy-tuning {
+		st,hs-dc-level = <2>;
+		st,fs-rftime-tuning;
+		st,hs-rftime-reduction;
+		st,hs-current-trim = <15>;
+		st,hs-impedance-trim = <1>;
+		st,squelch-level = <3>;
+		st,hs-rx-offset = <2>;
+		st,no-lsfs-sc;
+	};
+
+	reg_m_can: regulator-mcan {
+		compatible = "regulator-fixed";
+		regulator-name = "mcan-reg";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpiog 1 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		status = "okay";
+	};
+
+	reg_vcc_cam: regulator-cam {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc_cam";
+		regulator-min-microvolt = <2800000>;
+		regulator-max-microvolt = <2800000>;
+		status = "disabled";
+	};
+};
+
+&m_can2 {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&m_can2_pins_a>;
+        pinctrl-1 = <&m_can2_sleep_pins_a>;
+        status = "okay";
+};
+
+&i2c1 {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&i2c1_pins_a>;
+        pinctrl-1 = <&i2c1_pins_sleep_a>;
+        i2c-scl-rising-time-ns = <100>;
+        i2c-scl-falling-time-ns = <7>;
+        status = "okay";
+        /delete-property/dmas;
+        /delete-property/dma-names;
+
+        codec: tlv320@18 {
+                compatible = "ti,tlv320aic3007";
+                #sound-dai-cells = <0>;
+                reg = <0x18>;
+		status = "okay";
+
+                ai3x-micbias-vg = <2>;
+
+                /* gpio-reset = <&gpio5 8 GPIO_ACTIVE_LOW>; */
+                AVDD-supply = <&v3v3>;
+                IOVDD-supply = <&v3v3>;
+                DRVDD-supply = <&v3v3>;
+                DVDD-supply = <&v1v8_audio>;
+
+                clocks = <&sai2b>;
+                clock-names = "MCLK";
+
+
+
+		tlv320_port: port {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			tlv320_tx_endpoint: endpoint@0 {
+                                reg = <0>;
+				remote-endpoint = <&sai2b_endpoint>;
+                                frame-master;
+                                bitclock-master;
+			};
+
+			tlv320_rx_endpoint: endpoint@1 {
+                                reg = <1>;
+				remote-endpoint = <&sai2a_endpoint>;
+                                frame-master;
+                                bitclock-master;
+			};
+		};
+        };
+
+	stmpe_touch: stmpe811@44 {
+		compatible = "st,stmpe811";
+		reg = <0x44>;
+                interrupts = <3 2>;
+                interrupt-parent = <&gpioi>;
+		vio-supply = <&v3v3>;
+		vcc-supply = <&v3v3>;
+                status = "disabled";
+
+		stmpe_touchscreen {
+			compatible = "st,stmpe-ts";
+			st,sample-time = <4>;
+			st,mod-12b = <1>;
+			st,ref-sel = <0>;
+			st,adc-freq = <1>;
+			st,ave-ctrl = <1>;
+			st,touch-det-delay = <2>;
+			st,settling = <2>;
+			st,fraction-z = <7>;
+			st,i-drive = <1>;
+		};
+	};
+
+	leds: pca9533@62 {
+		compatible = "nxp,pca9533";
+		reg = <0x62>;
+		status = "okay";
+
+		red-power {
+			label = "pca:red:power";
+			type = <PCA9532_TYPE_LED>;
+		};
+
+		green-power {
+			label = "pca:green:power";
+			type = <PCA9532_TYPE_LED>;
+		};
+
+		blue-power {
+			type = <PCA9532_TYPE_LED>;
+			linux,default-trigger = "heartbeat";
+		};
+	};
+};
+
+&i2c2 {
+	status = "disabled";
+};
+
+
+&sai2 {
+	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
+	clock-names = "pclk", "x8k", "x11k";
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&sai2a_pins_b>, <&sai2b_pins_a>;
+	pinctrl-1 = <&sai2a_sleep_pins_b>, <&sai2b_sleep_pins_a>;
+	status = "okay";
+
+        sai2a: audio-controller@4400b004 {
+		dma-names = "rx";
+		st,sync = <&sai2b 2>;
+		status = "okay";
+		clocks = <&rcc SAI2_K>, <&sai2b>;
+		clock-names = "sai_ck", "MCLK";
+
+		sai2a_port: port {
+			sai2a_endpoint: endpoint {
+				remote-endpoint = <&tlv320_rx_endpoint>;
+				format = "i2s";
+				mclk-fs = <256>;
+                                dai-tdm-slot-num = <2>;
+                                dai-tdm-slot-width = <16>;
+			};
+		};
+	};
+
+        sai2b: audio-controller@4400b024 {
+                #clock-cells = <0>;
+                dma-names = "tx";
+                status = "okay";
+
+                sai2b_port: port {
+                        sai2b_endpoint: endpoint {
+                                remote-endpoint = <&tlv320_tx_endpoint>;
+                                format = "i2s";
+                                mclk-fs = <256>;
+                                dai-tdm-slot-num = <2>;
+                                dai-tdm-slot-width = <16>;
+                        };
+                };
+        };
+};
+
+&dcmi {
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&dcmi_pins_a>;
+	pinctrl-1 = <&dcmi_sleep_pins_a>;
+	status = "disabled";
+};
+
+&sdmmc1 {
+	pinctrl-names = "default", "opendrain", "sleep";
+	pinctrl-0 = <&sdmmc1_b4_pins_a>;
+	pinctrl-1 = <&sdmmc1_b4_od_pins_a>;
+	pinctrl-2 = <&sdmmc1_b4_sleep_pins_a>;
+	cd-gpios = <&gpiof 3 GPIO_ACTIVE_LOW>;  
+	st,neg-edge;
+	bus-width = <4>;
+	max-frequency = <10000000>;
+	vmmc-supply = <&v3v3>;
+	status = "okay";
+};
+
+
+&spi1 {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&spi1_pins_a>;
+        pinctrl-1 = <&spi1_sleep_pins_a>;
+	cs-gpios = <&gpioz 3 0>;
+        status = "okay";
+	spi@0 {
+                compatible = "linux,spidev";
+                spi-max-frequency = <10000000>;
+                reg = <0>;
+        };
+};
+
+
+&uart4 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&uart4_pins_a>;
+	pinctrl-1 = <&uart4_sleep_pins_a>;
+	pinctrl-2 = <&uart4_idle_pins_a>;
+	pinctrl-3 = <&uart4_pins_a>;
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	status = "okay";
+};
+
+&usart1 {
+        pinctrl-names = "default", "sleep", "idle";
+        pinctrl-0 = <&usart1_pins_a &usart1_pins_b>;
+        pinctrl-1 = <&usart1_sleep_pins_a &usart1_sleep_pins_b>;
+        pinctrl-2 = <&usart1_idle_pins_a &usart1_idle_pins_b>;
+        uart-has-rtscts;
+	/*linux,rs485-enabled-at-boot-time;*/
+        status = "okay";
+};
+
+&usart3 {
+	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-0 = <&usart3_pins_a>;
+	pinctrl-1 = <&usart3_sleep_pins_a>;
+	pinctrl-2 = <&usart3_idle_pins_a>;
+	status = "okay";
+};
+
+&usbh_ehci {
+	phys = <&usbphyc_port0>;
+	phy-names = "usb";
+	status = "okay";
+};
+
+&usbh_ohci {
+        phys = <&usbphyc_port0>;
+        phy-names = "usb";
+        status = "okay";
+};
+
+&usbotg_hs {
+	phys = <&usbphyc_port1 0>;
+	phy-names = "usb2-phy";
+	vbus-supply = <&vbus_otg>;
+	status = "okay";
+};
+
+&usbphyc {
+	vdd3v3-supply = <&vdd_usb>;
+	status = "okay";
+};
+
+&usbphyc_port0 {
+	phy-supply = <&vdd_usb>;
+        vbus-supply = <&vbus_sw>;
+	st,phy-tuning = <&usb_phy_tuning>;
+};
+
+&usbphyc_port1 {
+	phy-supply = <&vdd_usb>;
+	st,phy-tuning = <&usb_phy_tuning>;
+};
+
+&vrefbuf {
+	regulator-min-microvolt = <2500000>;
+	regulator-max-microvolt = <2500000>;
+	vdda-supply = <&vdd>;
+	status = "disabled";
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-2-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-2-a7-examples.dts
new file mode 100644
index 000000000000..10279a52699c
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-2-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-2.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-2 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-2-a7-examples", "phytec,phycore-stm32mp1-2",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-2-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-2-m4-examples.dts
new file mode 100644
index 000000000000..1913cfdde9ca
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-2-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-2.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-2 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-2-m4-examples", "phytec,phycore-stm32mp1-2",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-2.dts b/arch/arm/boot/dts/phycore-stm32mp1-2.dts
new file mode 100644
index 000000000000..7ab6d133a12f
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-2.dts
@@ -0,0 +1,48 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-3 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-2", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&gpu {
+        status = "okay";
+	contiguous-area = <&gpu_reserved>;
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "disabled";
+};
+
+&sdmmc2 {
+        status = "okay";
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-3-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-3-a7-examples.dts
new file mode 100644
index 000000000000..241096ff2c3d
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-3-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-3.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-3 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-3-a7-examples", "phytec,phycore-stm32mp1-3",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-3-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-3-m4-examples.dts
new file mode 100644
index 000000000000..f6742717bafa
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-3-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-3.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-3 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-3-m4-examples", "phytec,phycore-stm32mp1-3",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-3.dts b/arch/arm/boot/dts/phycore-stm32mp1-3.dts
new file mode 100644
index 000000000000..1d02ad19137b
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-3.dts
@@ -0,0 +1,52 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xc.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-3 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-3", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&gpu {
+        status = "okay";
+	contiguous-area = <&gpu_reserved>;
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "disabled";
+};
+
+&sdmmc2 {
+        status = "okay";
+};
+
+&cryp1 {
+        status = "okay";
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-4-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-4-a7-examples.dts
new file mode 100644
index 000000000000..3cd35536d25a
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-4-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-4.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-4 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-4-a7-examples", "phytec,phycore-stm32mp1-4",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-4-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-4-m4-examples.dts
new file mode 100644
index 000000000000..9d1ed7ca33eb
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-4-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-4.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-4 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-4-m4-examples", "phytec,phycore-stm32mp1-4",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-4.dts b/arch/arm/boot/dts/phycore-stm32mp1-4.dts
new file mode 100644
index 000000000000..2e846ff75df8
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-4.dts
@@ -0,0 +1,52 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp157.dtsi"
+#include "stm32mp15xf.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-4 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-4", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&gpu {
+        status = "okay";
+	contiguous-area = <&gpu_reserved>;
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "disabled";
+};
+
+&sdmmc2 {
+        status = "okay";
+};
+
+&cryp1 {
+        status = "okay";
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-5-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-5-a7-examples.dts
new file mode 100644
index 000000000000..eea4a27b2ba4
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-5-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-5.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-5 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-5-a7-examples", "phytec,phycore-stm32mp1-5",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-5-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-5-m4-examples.dts
new file mode 100644
index 000000000000..5e9fab4a486e
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-5-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-5.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-5 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-5-m4-examples", "phytec,phycore-stm32mp1-5",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-5.dts b/arch/arm/boot/dts/phycore-stm32mp1-5.dts
new file mode 100644
index 000000000000..fd64d1873fbd
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-5.dts
@@ -0,0 +1,43 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp153.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-5 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-5", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "disabled";
+};
+
+&sdmmc2 {
+        status = "okay";
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-6-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-6-a7-examples.dts
new file mode 100644
index 000000000000..6727cda7c622
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-6-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-6.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-6 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-6-a7-examples", "phytec,phycore-stm32mp1-6",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-6-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-6-m4-examples.dts
new file mode 100644
index 000000000000..c8ca5bd3b853
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-6-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-6.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-6 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-6-m4-examples", "phytec,phycore-stm32mp1-6",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-6.dts b/arch/arm/boot/dts/phycore-stm32mp1-6.dts
new file mode 100644
index 000000000000..55d01eb227ce
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-6.dts
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp153.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-6 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-6", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "okay";
+};
+
+&sdmmc2 {
+        status = "disabled";
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-7-a7-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-7-a7-examples.dts
new file mode 100644
index 000000000000..d20e483159c7
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-7-a7-examples.dts
@@ -0,0 +1,25 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-7.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-7 SOM with phyBOARD-Sargas SBC configured to run Linux A7 examples";
+        compatible = "phycore-stm32mp1-7-a7-examples", "phytec,phycore-stm32mp1-7",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+/* device tree specificities to run Linux-A7-examples */
+&gpio_keys {
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as input event
+	};
+        home {
+                status = "disabled"; //disable PA13 (key home) as input event
+        };
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-7-m4-examples.dts b/arch/arm/boot/dts/phycore-stm32mp1-7-m4-examples.dts
new file mode 100644
index 000000000000..9157f066d9d9
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-7-m4-examples.dts
@@ -0,0 +1,176 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "phycore-stm32mp1-7.dts"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-7 SOM with phyBOARD-Sargas SBC configured to run Cube M4 examples";
+        compatible = "phycore-stm32mp1-7-m4-examples", "phytec,phycore-stm32mp1-7",
+                     "phytec,stm32mp1-pcm068", "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&adc {
+	status = "disabled";
+};
+
+&dac {
+	status = "disabled";
+};
+
+&dma2 {
+	status = "disabled";
+};
+
+&dmamux1 {
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+};
+
+&spi1 {
+	status = "disabled";
+};
+
+&i2c1 {
+	status = "disabled";
+};
+
+&timers1 {
+	status = "disabled";
+};
+
+&usart3 {
+        status = "disabled";
+};
+
+&gpio_keys {
+	home {
+		status = "disabled"; //disable PA13 (key home) as Linux input event
+	};
+	enter {
+		status = "disabled"; //disable PA14 (key enter) as Linux input event
+	};
+};
+
+&vrefbuf {
+        status = "okay";
+};
+
+&m4_adc {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dac {
+	vref-supply = <&vrefbuf>;
+	status = "okay";
+};
+
+&m4_dma2 {
+	status = "okay";
+};
+
+&m4_crc2 {
+	status = "okay";
+};
+
+&m4_cryp2 {
+	status = "okay";
+};
+
+&m4_hash2 {
+	status = "okay";
+};
+
+&m4_i2c1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_i2c1_pins_a>;
+	status = "okay";
+};
+
+&m4_rng2 {
+	status = "okay";
+};
+
+&m4_rproc {
+	m4_system_resources {
+		status = "okay";
+
+		button {
+			compatible = "rproc-srm-dev";
+			interrupt-parent = <&gpioa>;
+			interrupts = <14 2>;
+			interrupt-names = "irq";
+			status = "okay";
+		};
+
+		m4_led: m4_led {
+			compatible = "rproc-srm-dev";
+			pinctrl-names = "default";
+			pinctrl-0 = <&m4_led_red_pin>;
+			status = "okay";
+		};
+	};
+};
+
+&m4_spi1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_spi1_pins_a>;
+	status = "okay";
+};
+
+
+&m4_timers1 {
+	pinctrl-names = "rproc_default";
+	pinctrl-0 = <&m4_tim1_pwm_pins>;
+	status = "okay";
+};
+
+&m4_usart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&m4_usart3_pins_a>;
+	status = "okay";
+};
+
+&pinctrl {
+	m4_tim1_pwm_pins: m4_tim1_pwm-0 {
+		pins {
+			pinmux = <STM32_PINMUX('E', 14, RSVD)>; /* TIM1_CH4 */
+		};
+	};
+
+        m4_i2c1_pins_a: m4_i2c1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('F', 14, RSVD)>, /* I2C1_SCL */
+                                 <STM32_PINMUX('F', 15, RSVD)>; /* I2C1_SDA */
+                };
+        };
+
+	m4_led_red_pin: m4-led-red-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 13, RSVD)>;
+		};
+	};
+
+        m4_usart3_pins_a: m4_usart3-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('B', 12, RSVD)>, /* USART3_RX */
+                                 <STM32_PINMUX('B', 10, RSVD)>; /* USART3_TX */
+                };
+        };
+};
+
+&pinctrl_z {
+        m4_spi1_pins_a: m4_spi1-0 {
+                pins {
+                        pinmux = <STM32_PINMUX('Z', 0, RSVD)>, /* SPI1_SCK */
+				 <STM32_PINMUX('Z', 1, RSVD)>, /* SPI1_MISO */
+                                 <STM32_PINMUX('Z', 2, RSVD)>; /* SPI1_MOSI */
+                };
+        };
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp1-7.dts b/arch/arm/boot/dts/phycore-stm32mp1-7.dts
new file mode 100644
index 000000000000..055e375a2fa3
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp1-7.dts
@@ -0,0 +1,44 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2020-2021 - All Rights Reserved
+ * Author: Christophe Parant <c.parant@phytec.fr>.
+ */
+
+/dts-v1/;
+
+#include "stm32mp153.dtsi"
+#include "stm32mp15xa.dtsi"
+#include "phycore-stm32mp15-som.dtsi"
+#include "stm32mp15xxac-pinctrl.dtsi"
+#include "phyboard-stm32mp1.dtsi"
+
+/ {
+        model = "Phytec GmbH phyCORE-stm32mp1-7 SOM with phyBOARD-Sargas SBC";
+        compatible = "phycore-stm32mp1-7", "phytec,stm32mp1-pcm068",
+                     "phytec,stm32mp1-pcm939", "st,stm32mp157";
+};
+
+&dts {
+        status = "okay";
+};
+
+&i2c4_rtc {
+        status = "okay";
+};
+
+&i2c4_eeprom {
+        status = "okay";
+};
+
+&qspi {
+        status = "okay";
+};
+
+&fmc {
+        status = "okay";
+};
+
+&sdmmc2 {
+        status = "disabled";
+};
+
diff --git a/arch/arm/boot/dts/phycore-stm32mp15-pinctrl.dtsi b/arch/arm/boot/dts/phycore-stm32mp15-pinctrl.dtsi
new file mode 100644
index 000000000000..cfa0c0960086
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp15-pinctrl.dtsi
@@ -0,0 +1,277 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+#include <dt-bindings/pinctrl/stm32-pinfunc.h>
+
+&pinctrl {
+	ethernet0_rgmii_pins_a: rgmii-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 4, AF11)>, /* ETH_RGMII_GTX_CLK */
+				 <STM32_PINMUX('G', 13, AF11)>, /* ETH_RGMII_TXD0 */
+				 <STM32_PINMUX('G', 14, AF11)>, /* ETH_RGMII_TXD1 */
+				 <STM32_PINMUX('C', 2, AF11)>, /* ETH_RGMII_TXD2 */
+				 <STM32_PINMUX('E', 2, AF11)>, /* ETH_RGMII_TXD3 */
+				 <STM32_PINMUX('B', 11, AF11)>, /* ETH_RGMII_TX_CTL */
+				 <STM32_PINMUX('A', 2, AF11)>, /* ETH_MDIO */
+				 <STM32_PINMUX('C', 1, AF11)>; /* ETH_MDC */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <2>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('C', 4, AF11)>, /* ETH_RGMII_RXD0 */
+				 <STM32_PINMUX('C', 5, AF11)>, /* ETH_RGMII_RXD1 */
+				 <STM32_PINMUX('H', 6, AF11)>, /* ETH_RGMII_RXD2 */
+				 <STM32_PINMUX('B', 1, AF11)>, /* ETH_RGMII_RXD3 */
+				 <STM32_PINMUX('A', 1, AF11)>, /* ETH_RGMII_RX_CLK */
+				 <STM32_PINMUX('A', 7, AF11)>; /* ETH_RGMII_RX_CTL */
+			bias-disable;
+		};
+	};
+
+	ethernet0_rgmii_pins_sleep_a: rgmii-sleep-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('G', 4, ANALOG)>, /* ETH_RGMII_GTX_CLK */
+				 <STM32_PINMUX('G', 13, ANALOG)>, /* ETH_RGMII_TXD0 */
+				 <STM32_PINMUX('G', 14, ANALOG)>, /* ETH_RGMII_TXD1 */
+				 <STM32_PINMUX('C', 2, ANALOG)>, /* ETH_RGMII_TXD2 */
+				 <STM32_PINMUX('E', 2, ANALOG)>, /* ETH_RGMII_TXD3 */
+				 <STM32_PINMUX('B', 11, ANALOG)>, /* ETH_RGMII_TX_CTL */
+				 <STM32_PINMUX('A', 2, ANALOG)>, /* ETH_MDIO */
+				 <STM32_PINMUX('C', 1, ANALOG)>, /* ETH_MDC */
+				 <STM32_PINMUX('C', 4, ANALOG)>, /* ETH_RGMII_RXD0 */
+				 <STM32_PINMUX('C', 5, ANALOG)>, /* ETH_RGMII_RXD1 */
+				 <STM32_PINMUX('H', 6, ANALOG)>, /* ETH_RGMII_RXD2 */
+				 <STM32_PINMUX('B', 1, ANALOG)>, /* ETH_RGMII_RXD3 */
+				 <STM32_PINMUX('A', 1, ANALOG)>, /* ETH_RGMII_RX_CLK */
+				 <STM32_PINMUX('A', 7, ANALOG)>; /* ETH_RGMII_RX_CTL */
+		};
+	};
+
+	fmc_pins_a: fmc-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('D', 4, AF12)>, /* FMC_NOE */
+				 <STM32_PINMUX('D', 5, AF12)>, /* FMC_NWE */
+				 <STM32_PINMUX('D', 11, AF12)>, /* FMC_A16_FMC_CLE */
+				 <STM32_PINMUX('D', 12, AF12)>, /* FMC_A17_FMC_ALE */
+				 <STM32_PINMUX('D', 14, AF12)>, /* FMC_D0 */
+				 <STM32_PINMUX('D', 15, AF12)>, /* FMC_D1 */
+				 <STM32_PINMUX('D', 0, AF12)>, /* FMC_D2 */
+				 <STM32_PINMUX('D', 1, AF12)>, /* FMC_D3 */
+				 <STM32_PINMUX('E', 7, AF12)>, /* FMC_D4 */
+				 <STM32_PINMUX('E', 8, AF12)>, /* FMC_D5 */
+				 <STM32_PINMUX('E', 9, AF12)>, /* FMC_D6 */
+				 <STM32_PINMUX('E', 10, AF12)>, /* FMC_D7 */
+				 <STM32_PINMUX('G', 9, AF12)>; /* FMC_NE2_FMC_NCE */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('D', 6, AF12)>; /* FMC_NWAIT */
+			bias-pull-up;
+		};
+	};
+
+	fmc_sleep_pins_a: fmc-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('D', 4, ANALOG)>, /* FMC_NOE */
+				 <STM32_PINMUX('D', 5, ANALOG)>, /* FMC_NWE */
+				 <STM32_PINMUX('D', 11, ANALOG)>, /* FMC_A16_FMC_CLE */
+				 <STM32_PINMUX('D', 12, ANALOG)>, /* FMC_A17_FMC_ALE */
+				 <STM32_PINMUX('D', 14, ANALOG)>, /* FMC_D0 */
+				 <STM32_PINMUX('D', 15, ANALOG)>, /* FMC_D1 */
+				 <STM32_PINMUX('D', 0, ANALOG)>, /* FMC_D2 */
+				 <STM32_PINMUX('D', 1, ANALOG)>, /* FMC_D3 */
+				 <STM32_PINMUX('E', 7, ANALOG)>, /* FMC_D4 */
+				 <STM32_PINMUX('E', 8, ANALOG)>, /* FMC_D5 */
+				 <STM32_PINMUX('E', 9, ANALOG)>, /* FMC_D6 */
+				 <STM32_PINMUX('E', 10, ANALOG)>, /* FMC_D7 */
+				 <STM32_PINMUX('D', 6, ANALOG)>, /* FMC_NWAIT */
+				 <STM32_PINMUX('G', 9, ANALOG)>; /* FMC_NE2_FMC_NCE */
+		};
+	};
+
+	qspi_bk1_pins_a: qspi-bk1-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('F', 8, AF10)>, /* QSPI_BK1_IO0 */
+				 <STM32_PINMUX('F', 9, AF10)>, /* QSPI_BK1_IO1 */
+				 <STM32_PINMUX('F', 7, AF9)>, /* QSPI_BK1_IO2 */
+				 <STM32_PINMUX('F', 6, AF9)>; /* QSPI_BK1_IO3 */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 6, AF10)>; /* QSPI_BK1_NCS */
+			bias-pull-up;
+			drive-push-pull;
+			slew-rate = <1>;
+		};
+	};
+
+	qspi_bk1_sleep_pins_a: qspi-bk1-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 8, ANALOG)>, /* QSPI_BK1_IO0 */
+				 <STM32_PINMUX('F', 9, ANALOG)>, /* QSPI_BK1_IO1 */
+				 <STM32_PINMUX('F', 7, ANALOG)>, /* QSPI_BK1_IO2 */
+				 <STM32_PINMUX('F', 6, ANALOG)>, /* QSPI_BK1_IO3 */
+				 <STM32_PINMUX('B', 6, ANALOG)>; /* QSPI_BK1_NCS */
+		};
+	};
+
+	qspi_clk_pins_a: qspi-clk-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 10, AF9)>; /* QSPI_CLK */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <3>;
+		};
+	};
+
+	qspi_clk_sleep_pins_a: qspi-clk-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('F', 10, ANALOG)>; /* QSPI_CLK */
+		};
+	};
+
+	sdmmc2_b4_pins_a: sdmmc2-b4-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
+				 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
+				 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
+				 <STM32_PINMUX('B', 4, AF9)>, /* SDMMC2_D3 */
+				 <STM32_PINMUX('G', 6, AF10)>; /* SDMMC2_CMD */
+			slew-rate = <1>;
+			drive-push-pull;
+			bias-pull-up;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			slew-rate = <2>;
+			drive-push-pull;
+			bias-pull-up;
+		};
+	};
+
+	sdmmc2_b4_od_pins_a: sdmmc2-b4-od-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
+				 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
+				 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
+				 <STM32_PINMUX('B', 4, AF9)>; /* SDMMC2_D3 */
+			slew-rate = <1>;
+			drive-push-pull;
+			bias-pull-up;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			slew-rate = <2>;
+			drive-push-pull;
+			bias-pull-up;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 6, AF10)>; /* SDMMC2_CMD */
+			slew-rate = <1>;
+			drive-open-drain;
+			bias-pull-up;
+		};
+	};
+
+	sdmmc2_b4_sleep_pins_a: sdmmc2-b4-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 14, ANALOG)>, /* SDMMC2_D0 */
+				 <STM32_PINMUX('B', 15, ANALOG)>, /* SDMMC2_D1 */
+				 <STM32_PINMUX('B', 3, ANALOG)>, /* SDMMC2_D2 */
+				 <STM32_PINMUX('B', 4, ANALOG)>, /* SDMMC2_D3 */
+				 <STM32_PINMUX('E', 3, ANALOG)>, /* SDMMC2_CK */
+				 <STM32_PINMUX('G', 6, ANALOG)>; /* SDMMC2_CMD */
+		};
+	};
+
+	sdmmc2_b4_pins_b: sdmmc2-b4-1 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
+				 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
+				 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
+				 <STM32_PINMUX('B', 4, AF9)>, /* SDMMC2_D3 */
+				 <STM32_PINMUX('G', 6, AF10)>; /* SDMMC2_CMD */
+			slew-rate = <1>;
+			drive-push-pull;
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			slew-rate = <2>;
+			drive-push-pull;
+			bias-disable;
+		};
+	};
+
+	sdmmc2_b4_od_pins_b: sdmmc2-b4-od-1 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
+				 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
+				 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
+				 <STM32_PINMUX('B', 4, AF9)>; /* SDMMC2_D3 */
+			slew-rate = <1>;
+			drive-push-pull;
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
+			slew-rate = <2>;
+			drive-push-pull;
+			bias-disable;
+		};
+		pins3 {
+			pinmux = <STM32_PINMUX('G', 6, AF10)>; /* SDMMC2_CMD */
+			slew-rate = <1>;
+			drive-open-drain;
+			bias-disable;
+		};
+	};
+
+	sdmmc2_d47_pins_a: sdmmc2-d47-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 8, AF9)>, /* SDMMC2_D4 */
+				 <STM32_PINMUX('A', 9, AF10)>, /* SDMMC2_D5 */
+				 <STM32_PINMUX('C', 6, AF10)>, /* SDMMC2_D6 */
+				 <STM32_PINMUX('D', 3, AF9)>; /* SDMMC2_D7 */
+			slew-rate = <1>;
+			drive-push-pull;
+			bias-pull-up;
+		};
+	};
+
+	sdmmc2_d47_sleep_pins_a: sdmmc2-d47-sleep-0 {
+		pins {
+			pinmux = <STM32_PINMUX('A', 8, ANALOG)>, /* SDMMC2_D4 */
+				 <STM32_PINMUX('A', 9, ANALOG)>, /* SDMMC2_D5 */
+				 <STM32_PINMUX('C', 6, ANALOG)>, /* SDMMC2_D6 */
+				 <STM32_PINMUX('D', 3, ANALOG)>; /* SDMMC2_D7 */
+		};
+	};
+};
+
+&pinctrl_z {
+	i2c4_pins_a: i2c4-0 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, AF6)>, /* I2C4_SCL */
+				 <STM32_PINMUX('Z', 5, AF6)>; /* I2C4_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c4_pins_sleep_a: i2c4-1 {
+		pins {
+			pinmux = <STM32_PINMUX('Z', 4, ANALOG)>, /* I2C4_SCL */
+				 <STM32_PINMUX('Z', 5, ANALOG)>; /* I2C4_SDA */
+		};
+	};
+};
diff --git a/arch/arm/boot/dts/phycore-stm32mp15-som.dtsi b/arch/arm/boot/dts/phycore-stm32mp15-som.dtsi
new file mode 100644
index 000000000000..b3eb85513b84
--- /dev/null
+++ b/arch/arm/boot/dts/phycore-stm32mp15-som.dtsi
@@ -0,0 +1,429 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
+/*
+ * Copyright (C) PHYTEC GmbH 2019-2020 - All Rights Reserved
+ * Author: Dom VOVARD <dom.vovard@linrt.com>.
+ */
+
+#include "phycore-stm32mp15-pinctrl.dtsi"
+#include "stm32mp15-m4-srm.dtsi"
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/mfd/st,stpmic1.h>
+#include <dt-bindings/net/ti-dp83867.h>
+#include <dt-bindings/rtc/rtc-stm32.h>
+
+/ {
+        model = "Phytec GmbH phycore-stm32mp1 SOM";
+        compatible = "phytec,PCM-068-1534-0-005", "st,stm32mp157";
+
+        memory@c0000000 {
+                reg = <0xc0000000 0x20000000>;
+        };
+
+	aliases {
+		mmc0 = &sdmmc1;
+		mmc1 = &sdmmc2;
+                mmc2 = &sdmmc3;
+	};
+
+        reserved-memory {
+                #address-cells = <1>;
+                #size-cells = <1>;
+                ranges;
+
+                retram: retram@0x38000000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x38000000 0x10000>;
+                        no-map;
+                };
+
+                mcuram: mcuram@0x30000000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x30000000 0x40000>;
+                        no-map;
+                };
+
+                mcuram2: mcuram2@0x10000000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x10000000 0x40000>;
+                        no-map;
+                };
+
+                vdev0vring0: vdev0vring0@10040000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x10040000 0x2000>;
+                        no-map;
+                };
+
+                vdev0vring1: vdev0vring1@10042000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x10042000 0x2000>;
+                        no-map;
+                };
+
+                vdev0buffer: vdev0buffer@10044000 {
+                        compatible = "shared-dma-pool";
+                        reg = <0x10044000 0x4000>;
+                        no-map;
+                };
+
+                gpu_reserved: gpu@f8000000 {
+                        reg = <0xf8000000 0x8000000>;
+                        no-map;
+                };
+        };
+
+	vin: vin {
+		compatible = "regulator-fixed";
+		regulator-name = "vin";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		regulator-always-on;
+	};
+
+};
+
+&cpu0{
+	cpu-supply = <&vddcore>;
+};
+
+&cpu1{
+	cpu-supply = <&vddcore>;
+};
+
+&sram {
+	dma_pool: dma_pool@0 {
+		reg = <0x50000 0x10000>;
+		pool;
+	};
+};
+
+&dma1 {
+        sram = <&dma_pool>;
+};
+
+&dma2 {
+        sram = <&dma_pool>;
+};
+
+&dts {
+        status = "okay";
+};
+
+&hash1 {
+	status = "okay";
+};
+
+&crc1 {
+	status = "okay";
+};
+
+&i2c4 {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&i2c4_pins_a>;
+        pinctrl-1 = <&i2c4_pins_sleep_a>;
+        i2c-scl-rising-time-ns = <185>;
+        i2c-scl-falling-time-ns = <20>;
+        status = "okay";
+	/* spare dmas for other usage */
+        /delete-property/dmas;
+        /delete-property/dma-names;
+
+        pmic: stpmic@33 {
+                compatible = "st,stpmic1";
+                reg = <0x33>;
+                interrupts-extended = <&exti_pwr 55 IRQ_TYPE_EDGE_FALLING>;
+                interrupt-controller;
+                #interrupt-cells = <2>;
+                status = "okay";
+		wakeup-source;
+
+                regulators {
+                        compatible = "st,stpmic1-regulators";
+			buck1-supply = <&vin>;
+			buck2-supply = <&vin>;
+			buck3-supply = <&vin>;
+			buck4-supply = <&vin>;
+                        ldo1-supply = <&v3v3>;
+                        ldo2-supply = <&v3v3>;
+                        ldo3-supply = <&vdd_ddr>;
+			ldo4-supply = <&vin>;
+                        ldo5-supply = <&v3v3>;
+                        ldo6-supply = <&v3v3>;
+			vref_ddr-supply = <&vin>;
+			boost-supply = <&vin>;
+                        pwr_sw1-supply = <&bst_out>;
+                        pwr_sw2-supply = <&bst_out>;
+
+                        vddcore: buck1 {
+                                regulator-name = "vddcore";
+                                regulator-min-microvolt = <1200000>;
+                                regulator-max-microvolt = <1350000>;
+                                regulator-always-on;
+                                regulator-initial-mode = <0>;
+                                regulator-over-current-protection;
+                        };
+
+                        vdd_ddr: buck2 {
+                                regulator-name = "vdd_ddr";
+                                regulator-min-microvolt = <1350000>;
+                                regulator-max-microvolt = <1350000>;
+                                regulator-always-on;
+                                regulator-initial-mode = <0>;
+                                regulator-over-current-protection;
+                        };
+
+                        vdd: buck3 {
+                                regulator-name = "vdd";
+                                regulator-min-microvolt = <3300000>;
+                                regulator-max-microvolt = <3300000>;
+                                regulator-always-on;
+                                st,mask-reset;
+                                regulator-initial-mode = <0>;
+                                regulator-over-current-protection;
+                        };
+
+                        v3v3: buck4 {
+                                regulator-name = "v3v3";
+                                regulator-min-microvolt = <3300000>;
+                                regulator-max-microvolt = <3300000>;
+                                regulator-always-on;
+                                regulator-over-current-protection;
+                                regulator-initial-mode = <0>;
+                        };
+
+                        v1v8_audio: ldo1 {
+                                regulator-name = "v1v8_audio";
+                                regulator-min-microvolt = <1800000>;
+                                regulator-max-microvolt = <1800000>;
+                                regulator-always-on;
+                                interrupts = <IT_CURLIM_LDO1 0>;
+
+                        };
+
+                        vdd_eth_2v5: ldo2 {
+                                regulator-name = "dd_eth_2v5";
+                                regulator-min-microvolt = <2500000>;
+                                regulator-max-microvolt = <2500000>;
+                                regulator-always-on;
+                                interrupts = <IT_CURLIM_LDO2 0>;
+
+                        };
+
+                        vtt_ddr: ldo3 {
+                                regulator-name = "vtt_ddr";
+                                regulator-min-microvolt = <500000>;
+                                regulator-max-microvolt = <750000>;
+                                regulator-always-on;
+                                regulator-over-current-protection;
+                        };
+
+                        vdd_usb: ldo4 {
+                                regulator-name = "vdd_usb";
+                                regulator-min-microvolt = <3300000>;
+                                regulator-max-microvolt = <3300000>;
+                                interrupts = <IT_CURLIM_LDO4 0>;
+                        };
+
+                        vdda: ldo5 {
+                                regulator-name = "vdda";
+                                regulator-min-microvolt = <2900000>;
+                                regulator-max-microvolt = <2900000>;
+                                interrupts = <IT_CURLIM_LDO5 0>;
+                                regulator-boot-on;
+                        };
+
+                        vdd_eth_1v0: ldo6 {
+                                regulator-name = "vdd_eth_1v0";
+                                regulator-min-microvolt = <1000000>;
+                                regulator-max-microvolt = <1000000>;
+                                regulator-always-on;
+                                interrupts = <IT_CURLIM_LDO6 0>;
+
+                        };
+
+                        vref_ddr: vref_ddr {
+                                regulator-name = "vref_ddr";
+                                regulator-always-on;
+                                regulator-over-current-protection;
+                        };
+
+                        bst_out: boost {
+                                regulator-name = "bst_out";
+                                interrupts = <IT_OCP_BOOST 0>;
+                        };
+
+                        vbus_otg: pwr_sw1 {
+                                regulator-name = "vbus_otg";
+                                interrupts = <IT_OCP_OTG 0>;
+                                regulator-active-discharge;
+                        };
+
+                        vbus_sw: pwr_sw2 {
+                                regulator-name = "vbus_sw";
+                                interrupts = <IT_OCP_SWOUT 0>;
+                                regulator-active-discharge;
+                        };
+                };
+
+                onkey {
+                        compatible = "st,stpmic1-onkey";
+                        interrupts = <IT_PONKEY_F 0>, <IT_PONKEY_R 0>;
+                        interrupt-names = "onkey-falling", "onkey-rising";
+			power-off-time-sec = <10>;
+                        status = "okay";
+                };
+
+                watchdog {
+                        compatible = "st,stpmic1-wdt";
+                        status = "disabled";
+                };
+        };
+
+        i2c4_eeprom: eeprom@50 {
+                compatible = "microchip,24c32", "atmel,24c32";
+                reg = <0x50>;
+		status = "disabled";
+        };
+
+        i2c4_rtc: rtc@52 {
+                compatible = "microcrystal,rv3028";
+                reg = <0x52>;
+                enable-level-switching-mode;
+                status = "disabled";
+        };
+};
+
+&ethernet0 {
+        status = "okay";
+        pinctrl-0 = <&ethernet0_rgmii_pins_a>;
+        pinctrl-1 = <&ethernet0_rgmii_pins_sleep_a>;
+        pinctrl-names = "default", "sleep";
+        phy-mode = "rgmii-id";
+        max-speed = <1000>;
+        phy-handle = <&phy0>;
+        nvmem-cells = <&ethernet_mac_address>;
+        nvmem-cell-names = "mac-address";
+        st,eth-clk-sel = "true";
+	clock-names = "stmmaceth",
+		      "mac-clk-tx",
+		      "mac-clk-rx",
+        	      "eth-ck",
+        	      "syscfg-clk",
+		      "ethstp";
+	clocks = <&rcc ETHMAC>,
+		 <&rcc ETHTX>,
+		 <&rcc ETHRX>,
+        	 <&rcc ETHCK_K>,
+        	 <&rcc SYSCFG>,
+		 <&rcc ETHSTP>;
+
+        mdio0 {
+                #address-cells = <1>;
+                #size-cells = <0>;
+                compatible = "snps,dwmac-mdio";
+
+                phy0: ethernet-phy@1 {
+                        compatible = "ethernet-phy-ieee802.3-c22";
+                        reg = <1>;
+                        interrupt-parent = <&gpiog>;
+                        interrupts = <12 IRQ_TYPE_EDGE_FALLING>;
+                        ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
+                        ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
+                        ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
+                        ti,min-output-impedance;
+                        enet-phy-lane-no-swap;
+			ti,clk-output-sel = <DP83867_CLK_O_SEL_OFF>;
+                };
+        };
+};
+
+&m4_rproc {
+        memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
+                        <&vdev0vring1>, <&vdev0buffer>;
+        mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
+        mbox-names = "vq0", "vq1", "shutdown";
+        interrupt-parent = <&exti>;
+        interrupts = <68 1>;
+        wakeup-source;
+        status = "okay";
+};
+
+&ipcc {
+        status = "okay";
+};
+
+&iwdg2 {
+        timeout-sec = <32>;
+        status = "okay";
+};
+
+&pwr_regulators {
+	vdd-supply = <&vdd>;
+	vdd_3v3_usbfs-supply = <&vdd_usb>;
+};
+
+&rng1 {
+        status = "okay";
+};
+
+&rtc {
+        status = "okay";
+};
+
+&qspi {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&qspi_clk_pins_a &qspi_bk1_pins_a>;
+        pinctrl-1 = <&qspi_clk_sleep_pins_a &qspi_bk1_sleep_pins_a>;
+        reg = <0x58003000 0x1000>, <0x70000000 0x4000000>;
+        #address-cells = <1>;
+        #size-cells = <0>;
+        status = "disabled";
+
+        flash0: w25q128@0 {
+                compatible = "winbond,w25q128", "jedec,spi-nor", "spi-flash";
+                reg = <0>;
+                spi-rx-bus-width = <4>;
+                spi-max-frequency = <50000000>;
+                m25p,fast-read;
+                #address-cells = <1>;
+                #size-cells = <1>;
+        };
+};
+
+&fmc {
+        pinctrl-names = "default", "sleep";
+        pinctrl-0 = <&fmc_pins_a>;
+        pinctrl-1 = <&fmc_sleep_pins_a>;
+        status = "disabled";
+
+	nand-controller@4,0 {
+		status = "okay";
+
+		nand: nand@0 {
+			reg = <0>;
+			nand-on-flash-bbt;
+			nand-ecc-strength = <4>;
+			nand-ecc-step-size = <512>;
+			#address-cells = <1>;
+			#size-cells = <1>;
+		};
+	};
+};
+
+&sdmmc2 {
+        pinctrl-names = "default", "opendrain", "sleep";
+        pinctrl-0 = <&sdmmc2_b4_pins_a &sdmmc2_d47_pins_a>;
+        pinctrl-1 = <&sdmmc2_b4_od_pins_a &sdmmc2_d47_pins_a>;
+        pinctrl-2 = <&sdmmc2_b4_sleep_pins_a &sdmmc2_d47_sleep_pins_a>;
+        non-removable;
+        no-sd;
+        no-sdio;
+        st,neg-edge;
+        bus-width = <8>;
+        vmmc-supply = <&v3v3>;
+        vqmmc-supply = <&v3v3>;
+        mmc-ddr-3_3v;
+        status = "disabled";
+};
+
-- 
2.17.1

